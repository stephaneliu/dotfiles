# support for osx, all others don't symlink
# source ~/.tmux-osx.conf

# use zsh
  set -g default-command ~/bin/zsh
  set -g default-shell ~/bin/zsh

# use CTRL-A as modifier
  set-option -g prefix C-a

# Support for 256 colors
  set -g default-terminal "screen-256color"
# bind vi key-mapping
  set -g status-keys vi

# use mouse in copy mode
# setw -g mode-mouse on 

#vi-style controls for copy mode
  set-window-option -g mode-keys vi

# Window index base 1
set -g base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Set status bar
  set-window-option -g window-status-current-bg colour17
  set-window-option -g window-status-current-fg colour27
  # use vim script github.com/guns/xterm-color-table.vim' for color code
  # yes you must use colour
  set -g status-bg colour16
  set -g status-fg white
  set -g status-left '#[fg=colour15,bg=colour17]#H'
  set -g status-right '#[fg=colour15,bg=colour17]#(uptime | cut -d"," -f 2-)'
  set -g status-interval 2
  set -g message-command-fg blue
  set -g message-command-bg colour16

# window mode
# setw -g mode-bg colour6
# setw -g mode-fg colour0

# window status
# setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
# setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
# setw -g window-status-current-bg colour15
# setw -g window-status-current-fg colour17
# setw -g window-status-current-attr dim
# setw -g window-status-bg green
# setw -g window-status-fg black
# setw -g window-status-attr reverse
# setw -g window-status-content-bg colour0
# setw -g window-status-content-fg colour11
setw -g window-status-content-attr bold,blink,reverse

  # large history
  set-option -g history-limit 100000

# display active pane in diff background
  set-option -g pane-active-border-fg white
  set-option -g pane-active-border-bg colour38

# highlight status bar on activity
  setw -g monitor-activity on
  set -g visual-activity on
  set -g visual-bell on
# automatically set window title
  set -g automatic-rename
  set -g allow-rename off

# speed up 
set-option -s escape-time 10

######## Bindings ########
# bind C-a to the previously active window
  bind-key C-a last-window
# force a reload of the config file
  bind C-r source-file ~/.tmux.conf \; run-shell "echo 'tmux Configuration Reloaded'"
# new windows with current dir path
  unbind c
  bind c new-window -c "#{pane_current_path}"
# split windows like vim.  - Note: vim's definition of a horizontal/vertical split is reversed from tmux's
  unbind s
  bind s split-window -v -c "#{pane_current_path}"
  bind C-s split-window -v -l 18 -c "#{pane_current_path}"
  bind v split-window -h -c "#{pane_current_path}"
  bind C-v split-window -h -l 155 -c "#{pane_current_path}"
  # navigate panes with hjkl
  bind h select-pane -L
  bind j select-pane -D
  bind k select-pane -U
  bind l select-pane -R
  # resize panes like vim
  bind < resize-pane -L 10 
  bind L resize-pane -L 100
  bind > resize-pane -R 10
  bind R resize-pane -R 100
  bind - resize-pane -D 5
  bind D resize-pane -D 36
  bind + resize-pane -U 5
  bind U resize-pane -U 35

  unbind =
  bind _ resize-pane -D 1000
  bind = resize-pane -y 39
  bind | resize-pane -L 1000
  bind \ resize-pane -x 80

# bind : to command-prompt like vim this is the default in tmux already
  bind : command-prompt
  bind R source-file ~/.tmuxinator/rdev
