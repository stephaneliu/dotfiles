#!/usr/bin/env ruby

# frozen_string_literal: true

EXPORT_DIR = File.join(ENV['HOME'], 'Documents', 'Resource', 'Software', 'plists').freeze
APP_PREFERENCES = [
  'com.crowdcafe.windowmagnet', 'com.mizage.direct.Divvy', 'com.kapeli.dashdoc',
  'com.googlecode.iterm2', 'io.github.keycastr'
].freeze

def import
  error_with_message("Directory #{EXPORT_DIR} does not exist") unless destination_dir_exists?
  error_with_message("There are no plists in #{EXPORT_DIR}") unless plists_exists?

  puts "Import #{APP_PREFERENCES.size} plists from #{EXPORT_DIR}"

  APP_PREFERENCES.each do |app_preference|
    system "defaults import #{app_preference} #{EXPORT_DIR}/#{app_preference}.plist"
  end
end

# https://andrew.hawker.io/dailies/2021/03/01/migrate-divvy-configuration/
def export
  error_with_message("Directory #{EXPORT_DIR} does not exist") unless destination_dir_exists?

  puts "Exporting #{APP_PREFERENCES.size} plists to #{EXPORT_DIR}"

  APP_PREFERENCES.each do |app_preference|
    system "defaults export #{app_preference} #{EXPORT_DIR}/#{app_preference}.plist"
  end
end

def error_with_message(message)
  puts message
  exit 1
end

def destination_dir_exists?
  Dir.exist?(EXPORT_DIR)
end

def plists_exists?
  Dir.glob("#{EXPORT_DIR}/*.plist").any?
end

case ARGV.first
when 'import'
  import
when 'export'
  export
else
  puts 'USAGE: plist import|export'
  exit
end
